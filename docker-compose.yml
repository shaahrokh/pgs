version: '3.9'

services:
  # nodejs application services (api)
  app-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: pgs-backend
    working_dir: /app
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - ./app/backend:/app
      - ./tmp/.npm:/root/.npm
      - ./logs/frontend:/logs
    command: tail -f /dev/null
    depends_on: 
      - app-postgres

  app-fronted:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: pgs-frontend
    working_dir: /app
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./app/frontend:/app
      - ./tmp/.npm:/root/.npm
      - ./logs/backend:/logs
    command: tail -f /dev/null

  app-postgres:
    image: postgres:14
    container_name: pgs-postgres
    hostname: postgres
    restart: always
    # env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - "./data/postgres:/var/lib/postgresql/data"
      - "./postgresql.conf:/etc/postgresql/postgresql.conf"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf  
  pgAdmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - "PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}"
      - "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}"
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    links:
      - "app-postgres:pgsql-server"  


  